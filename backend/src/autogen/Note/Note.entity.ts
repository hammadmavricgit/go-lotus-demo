/**
 * This file generated by Apso.
 */ /* eslint @typescript-eslint/no-unused-vars: "off" */

import {
  Column,
  Entity,
  ManyToOne,
  CreateDateColumn,
  UpdateDateColumn,
  PrimaryGeneratedColumn,
  Generated,
  JoinColumn,
  JoinTable,
  Index,
  Unique,
  PrimaryColumn,
} from 'typeorm';
import {
  IsOptional,
  IsString,
  MaxLength,
  IsNotEmpty,
  IsEmail,
  IsBoolean,
  ValidateNested,
} from 'class-validator';
import { Type } from 'class-transformer';
import { CrudValidationGroups } from '@nestjsx/crud';
import { User } from '../User/User.entity';

const { CREATE, UPDATE } = CrudValidationGroups;

@Entity('note')
export class Note {
  // Fields
  @PrimaryGeneratedColumn()
  id!: number;

  @CreateDateColumn()
  created_at: Date;

  @UpdateDateColumn()
  updated_at: Date;

  @IsOptional({ groups: [UPDATE] })
  @Column({ type: 'text', nullable: true })
  issue_date: string;

  @IsOptional({ groups: [UPDATE] })
  @Column({ type: 'text', nullable: true })
  label: string;

  @IsOptional({ groups: [UPDATE] })
  @Column({ type: 'text', nullable: true })
  note: string;

  @IsOptional({ groups: [UPDATE] })
  @Column({ type: 'text', nullable: true })
  file_url: string;

  @Column('jsonb', { nullable: true })
  attachments: JSON;

  // Associations

  @ManyToOne(() => User, (user) => user.notes)
  @JoinColumn({ name: 'userId' })
  user: User;

  @Column({ type: 'integer', nullable: true })
  userId: number;
}
